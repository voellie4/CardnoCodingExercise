#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CandidateApplication.App_Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DbCandidate")]
	public partial class CandidateDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCandidate(Candidate instance);
    partial void UpdateCandidate(Candidate instance);
    partial void DeleteCandidate(Candidate instance);
    partial void InsertQualification(Qualification instance);
    partial void UpdateQualification(Qualification instance);
    partial void DeleteQualification(Qualification instance);
    #endregion
		
		public CandidateDataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CandidateDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CandidateDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CandidateDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CandidateDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Candidate> Candidates
		{
			get
			{
				return this.GetTable<Candidate>();
			}
		}
		
		public System.Data.Linq.Table<Qualification> Qualifications
		{
			get
			{
				return this.GetTable<Qualification>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.procCandidateSelect")]
		public ISingleResult<procCandidateSelectResult> procCandidateSelect([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstName", DbType="VarChar(25)")] string firstName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastName", DbType="VarChar(25)")] string lastName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(150)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PhoneNumber", DbType="VarChar(20)")] string phoneNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ZipCode", DbType="VarChar(5)")] string zipCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QualificationType", DbType="VarChar(30)")] string qualificationType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QualificationName", DbType="VarChar(MAX)")] string qualificationName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SearchDate", DbType="DateTime")] System.Nullable<System.DateTime> searchDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), firstName, lastName, email, phoneNumber, zipCode, qualificationType, qualificationName, searchDate);
			return ((ISingleResult<procCandidateSelectResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Candidates")]
	public partial class Candidate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CandidateId;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private string _ZipCode;
		
		private EntitySet<Qualification> _Qualifications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCandidateIdChanging(int value);
    partial void OnCandidateIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    #endregion
		
		public Candidate()
		{
			this._Qualifications = new EntitySet<Qualification>(new Action<Qualification>(this.attach_Qualifications), new Action<Qualification>(this.detach_Qualifications));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidateId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CandidateId
		{
			get
			{
				return this._CandidateId;
			}
			set
			{
				if ((this._CandidateId != value))
				{
					this.OnCandidateIdChanging(value);
					this.SendPropertyChanging();
					this._CandidateId = value;
					this.SendPropertyChanged("CandidateId");
					this.OnCandidateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Candidate_Qualification", Storage="_Qualifications", ThisKey="CandidateId", OtherKey="CandidateId")]
		public EntitySet<Qualification> Qualifications
		{
			get
			{
				return this._Qualifications;
			}
			set
			{
				this._Qualifications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Qualifications(Qualification entity)
		{
			this.SendPropertyChanging();
			entity.Candidate = this;
		}
		
		private void detach_Qualifications(Qualification entity)
		{
			this.SendPropertyChanging();
			entity.Candidate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Qualifications")]
	public partial class Qualification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QualificationId;
		
		private string _QualificationType;
		
		private string _QualificationName;
		
		private System.Nullable<System.DateTime> _DateStarted;
		
		private System.Nullable<System.DateTime> _DateCompleted;
		
		private int _CandidateId;
		
		private EntityRef<Candidate> _Candidate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQualificationIdChanging(int value);
    partial void OnQualificationIdChanged();
    partial void OnQualificationTypeChanging(string value);
    partial void OnQualificationTypeChanged();
    partial void OnQualificationNameChanging(string value);
    partial void OnQualificationNameChanged();
    partial void OnDateStartedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateStartedChanged();
    partial void OnDateCompletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCompletedChanged();
    partial void OnCandidateIdChanging(int value);
    partial void OnCandidateIdChanged();
    #endregion
		
		public Qualification()
		{
			this._Candidate = default(EntityRef<Candidate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualificationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int QualificationId
		{
			get
			{
				return this._QualificationId;
			}
			set
			{
				if ((this._QualificationId != value))
				{
					this.OnQualificationIdChanging(value);
					this.SendPropertyChanging();
					this._QualificationId = value;
					this.SendPropertyChanged("QualificationId");
					this.OnQualificationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualificationType", DbType="NVarChar(MAX)")]
		public string QualificationType
		{
			get
			{
				return this._QualificationType;
			}
			set
			{
				if ((this._QualificationType != value))
				{
					this.OnQualificationTypeChanging(value);
					this.SendPropertyChanging();
					this._QualificationType = value;
					this.SendPropertyChanged("QualificationType");
					this.OnQualificationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualificationName", DbType="NVarChar(MAX)")]
		public string QualificationName
		{
			get
			{
				return this._QualificationName;
			}
			set
			{
				if ((this._QualificationName != value))
				{
					this.OnQualificationNameChanging(value);
					this.SendPropertyChanging();
					this._QualificationName = value;
					this.SendPropertyChanged("QualificationName");
					this.OnQualificationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStarted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateStarted
		{
			get
			{
				return this._DateStarted;
			}
			set
			{
				if ((this._DateStarted != value))
				{
					this.OnDateStartedChanging(value);
					this.SendPropertyChanging();
					this._DateStarted = value;
					this.SendPropertyChanged("DateStarted");
					this.OnDateStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCompleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCompleted
		{
			get
			{
				return this._DateCompleted;
			}
			set
			{
				if ((this._DateCompleted != value))
				{
					this.OnDateCompletedChanging(value);
					this.SendPropertyChanging();
					this._DateCompleted = value;
					this.SendPropertyChanged("DateCompleted");
					this.OnDateCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidateId", DbType="Int NOT NULL")]
		public int CandidateId
		{
			get
			{
				return this._CandidateId;
			}
			set
			{
				if ((this._CandidateId != value))
				{
					if (this._Candidate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCandidateIdChanging(value);
					this.SendPropertyChanging();
					this._CandidateId = value;
					this.SendPropertyChanged("CandidateId");
					this.OnCandidateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Candidate_Qualification", Storage="_Candidate", ThisKey="CandidateId", OtherKey="CandidateId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Candidate Candidate
		{
			get
			{
				return this._Candidate.Entity;
			}
			set
			{
				Candidate previousValue = this._Candidate.Entity;
				if (((previousValue != value) 
							|| (this._Candidate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Candidate.Entity = null;
						previousValue.Qualifications.Remove(this);
					}
					this._Candidate.Entity = value;
					if ((value != null))
					{
						value.Qualifications.Add(this);
						this._CandidateId = value.CandidateId;
					}
					else
					{
						this._CandidateId = default(int);
					}
					this.SendPropertyChanged("Candidate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class procCandidateSelectResult
	{
		
		private int _CandidateId;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private string _ZipCode;
		
		public procCandidateSelectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidateId", DbType="Int NOT NULL")]
		public int CandidateId
		{
			get
			{
				return this._CandidateId;
			}
			set
			{
				if ((this._CandidateId != value))
				{
					this._CandidateId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this._PhoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this._ZipCode = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
